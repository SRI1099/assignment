{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "3f8b940a-5807-41d0-ac81-a148c9cf9495",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Defaulting to user installation because normal site-packages is not writeable\n",
      "Collecting numpy==1.24.3\n",
      "  Using cached numpy-1.24.3.tar.gz (10.9 MB)\n",
      "  Installing build dependencies: started\n",
      "  Installing build dependencies: finished with status 'done'\n",
      "  Getting requirements to build wheel: started\n",
      "  Getting requirements to build wheel: finished with status 'done'\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ERROR: Exception:\n",
      "Traceback (most recent call last):\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\cli\\base_command.py\", line 180, in exc_logging_wrapper\n",
      "    status = run_func(*args)\n",
      "             ^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\cli\\req_command.py\", line 245, in wrapper\n",
      "    return func(self, options, args)\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\commands\\install.py\", line 377, in run\n",
      "    requirement_set = resolver.resolve(\n",
      "                      ^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\resolution\\resolvelib\\resolver.py\", line 95, in resolve\n",
      "    result = self._result = resolver.resolve(\n",
      "                            ^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_vendor\\resolvelib\\resolvers.py\", line 546, in resolve\n",
      "    state = resolution.resolve(requirements, max_rounds=max_rounds)\n",
      "            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_vendor\\resolvelib\\resolvers.py\", line 397, in resolve\n",
      "    self._add_to_criteria(self.state.criteria, r, parent=None)\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_vendor\\resolvelib\\resolvers.py\", line 173, in _add_to_criteria\n",
      "    if not criterion.candidates:\n",
      "           ^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_vendor\\resolvelib\\structs.py\", line 156, in __bool__\n",
      "    return bool(self._sequence)\n",
      "           ^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py\", line 155, in __bool__\n",
      "    return any(self)\n",
      "           ^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py\", line 143, in <genexpr>\n",
      "    return (c for c in iterator if id(c) not in self._incompatible_ids)\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py\", line 47, in _iter_built\n",
      "    candidate = func()\n",
      "                ^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py\", line 182, in _make_candidate_from_link\n",
      "    base: Optional[BaseCandidate] = self._make_base_candidate_from_link(\n",
      "                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py\", line 228, in _make_base_candidate_from_link\n",
      "    self._link_candidate_cache[link] = LinkCandidate(\n",
      "                                       ^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py\", line 293, in __init__\n",
      "    super().__init__(\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py\", line 156, in __init__\n",
      "    self.dist = self._prepare()\n",
      "                ^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py\", line 225, in _prepare\n",
      "    dist = self._prepare_distribution()\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py\", line 304, in _prepare_distribution\n",
      "    return preparer.prepare_linked_requirement(self._ireq, parallel_builds=True)\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\operations\\prepare.py\", line 525, in prepare_linked_requirement\n",
      "    return self._prepare_linked_requirement(req, parallel_builds)\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\operations\\prepare.py\", line 640, in _prepare_linked_requirement\n",
      "    dist = _get_prepared_distribution(\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\operations\\prepare.py\", line 71, in _get_prepared_distribution\n",
      "    abstract_dist.prepare_distribution_metadata(\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\distributions\\sdist.py\", line 54, in prepare_distribution_metadata\n",
      "    self._install_build_reqs(finder)\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\distributions\\sdist.py\", line 124, in _install_build_reqs\n",
      "    build_reqs = self._get_build_requires_wheel()\n",
      "                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\distributions\\sdist.py\", line 101, in _get_build_requires_wheel\n",
      "    return backend.get_requires_for_build_wheel()\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_internal\\utils\\misc.py\", line 751, in get_requires_for_build_wheel\n",
      "    return super().get_requires_for_build_wheel(config_settings=cs)\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_vendor\\pyproject_hooks\\_impl.py\", line 166, in get_requires_for_build_wheel\n",
      "    return self._call_hook('get_requires_for_build_wheel', {\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_vendor\\pyproject_hooks\\_impl.py\", line 321, in _call_hook\n",
      "    raise BackendUnavailable(data.get('traceback', ''))\n",
      "pip._vendor.pyproject_hooks._impl.BackendUnavailable: Traceback (most recent call last):\n",
      "  File \"C:\\Users\\krnku\\AppData\\Roaming\\Python\\Python312\\site-packages\\pip\\_vendor\\pyproject_hooks\\_in_process\\_in_process.py\", line 77, in _build_backend\n",
      "    obj = import_module(mod_path)\n",
      "          ^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"C:\\Program Files\\Python312\\Lib\\importlib\\__init__.py\", line 90, in import_module\n",
      "    return _bootstrap._gcd_import(name[level:], package, level)\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "  File \"<frozen importlib._bootstrap>\", line 1387, in _gcd_import\n",
      "  File \"<frozen importlib._bootstrap>\", line 1360, in _find_and_load\n",
      "  File \"<frozen importlib._bootstrap>\", line 1310, in _find_and_load_unlocked\n",
      "  File \"<frozen importlib._bootstrap>\", line 488, in _call_with_frames_removed\n",
      "  File \"<frozen importlib._bootstrap>\", line 1387, in _gcd_import\n",
      "  File \"<frozen importlib._bootstrap>\", line 1360, in _find_and_load\n",
      "  File \"<frozen importlib._bootstrap>\", line 1331, in _find_and_load_unlocked\n",
      "  File \"<frozen importlib._bootstrap>\", line 935, in _load_unlocked\n",
      "  File \"<frozen importlib._bootstrap_external>\", line 994, in exec_module\n",
      "  File \"<frozen importlib._bootstrap>\", line 488, in _call_with_frames_removed\n",
      "  File \"C:\\Users\\krnku\\AppData\\Local\\Temp\\pip-build-env-vaq5y45y\\overlay\\Lib\\site-packages\\setuptools\\__init__.py\", line 10, in <module>\n",
      "    import distutils.core\n",
      "ModuleNotFoundError: No module named 'distutils'\n",
      "\n",
      "\n",
      "[notice] A new release of pip is available: 23.3.2 -> 24.0\n",
      "[notice] To update, run: python.exe -m pip install --upgrade pip\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Defaulting to user installation because normal site-packages is not writeable\n",
      "Requirement already satisfied: pandas==2.2.0 in c:\\users\\krnku\\appdata\\roaming\\python\\python312\\site-packages (2.2.0)\n",
      "Requirement already satisfied: numpy<2,>=1.26.0 in c:\\users\\krnku\\appdata\\roaming\\python\\python312\\site-packages (from pandas==2.2.0) (1.26.3)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\krnku\\appdata\\roaming\\python\\python312\\site-packages (from pandas==2.2.0) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\krnku\\appdata\\roaming\\python\\python312\\site-packages (from pandas==2.2.0) (2023.3.post1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\krnku\\appdata\\roaming\\python\\python312\\site-packages (from pandas==2.2.0) (2023.4)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\krnku\\appdata\\roaming\\python\\python312\\site-packages (from python-dateutil>=2.8.2->pandas==2.2.0) (1.16.0)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "[notice] A new release of pip is available: 23.3.2 -> 24.0\n",
      "[notice] To update, run: python.exe -m pip install --upgrade pip\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Defaulting to user installation because normal site-packages is not writeable\n",
      "Requirement already satisfied: scikit-learn==1.4.0 in c:\\users\\krnku\\appdata\\roaming\\python\\python312\\site-packages (1.4.0)\n",
      "Requirement already satisfied: numpy<2.0,>=1.19.5 in c:\\users\\krnku\\appdata\\roaming\\python\\python312\\site-packages (from scikit-learn==1.4.0) (1.26.3)\n",
      "Requirement already satisfied: scipy>=1.6.0 in c:\\users\\krnku\\appdata\\roaming\\python\\python312\\site-packages (from scikit-learn==1.4.0) (1.11.4)\n",
      "Requirement already satisfied: joblib>=1.2.0 in c:\\users\\krnku\\appdata\\roaming\\python\\python312\\site-packages (from scikit-learn==1.4.0) (1.3.2)\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in c:\\users\\krnku\\appdata\\roaming\\python\\python312\\site-packages (from scikit-learn==1.4.0) (3.2.0)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "[notice] A new release of pip is available: 23.3.2 -> 24.0\n",
      "[notice] To update, run: python.exe -m pip install --upgrade pip\n"
     ]
    }
   ],
   "source": [
    "!pip install --upgrade numpy==1.24.3\n",
    "!pip install --upgrade pandas==2.2.0\n",
    "!pip install --upgrade scikit-learn==1.4.0\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "45341ecd-2817-47fc-b30b-5622cac32036",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Question-1#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "ffacf9b6-8ded-418b-99bd-027f755c7d50",
   "metadata": {},
   "outputs": [],
   "source": [
    "df= pd.read_csv('insurance.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "ba6e4a0c-e057-420d-9387-3ebc256a054a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.0</td>\n",
       "      <td>female</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>southwest</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18.0</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>male</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.0</td>\n",
       "      <td>male</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>Artist</td>\n",
       "      <td>7900.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32.0</td>\n",
       "      <td>male</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>Artist</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>50.0</td>\n",
       "      <td>male</td>\n",
       "      <td>30.970</td>\n",
       "      <td>3.0</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "      <td>10600.54830</td>\n",
       "      <td>Doctor</td>\n",
       "      <td>7400.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>18.0</td>\n",
       "      <td>female</td>\n",
       "      <td>31.920</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>northeast</td>\n",
       "      <td>2205.98080</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>NaN</td>\n",
       "      <td>female</td>\n",
       "      <td>36.850</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1629.83350</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>21.0</td>\n",
       "      <td>female</td>\n",
       "      <td>25.800</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>southwest</td>\n",
       "      <td>2007.94500</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>61.0</td>\n",
       "      <td>female</td>\n",
       "      <td>29.070</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>northwest</td>\n",
       "      <td>29141.36030</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>4800.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1338 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age     sex     bmi  children smoker     region      charges  \\\n",
       "0     19.0  female  27.900       0.0    yes  southwest  16884.92400   \n",
       "1     18.0    male     NaN       1.0     no  southeast   1725.55230   \n",
       "2     28.0    male  33.000       3.0     no        NaN   4449.46200   \n",
       "3     33.0    male  22.705       0.0     no        NaN  21984.47061   \n",
       "4     32.0    male  28.880       0.0     no  northwest   3866.85520   \n",
       "...    ...     ...     ...       ...    ...        ...          ...   \n",
       "1333  50.0    male  30.970       3.0     no  northwest  10600.54830   \n",
       "1334  18.0  female  31.920       0.0     no  northeast   2205.98080   \n",
       "1335   NaN  female  36.850       0.0     no        NaN   1629.83350   \n",
       "1336  21.0  female  25.800       0.0     no  southwest   2007.94500   \n",
       "1337  61.0  female  29.070       0.0    NaN  northwest  29141.36030   \n",
       "\n",
       "     occupation  avg_steps_per_day          gym_frequency  time_spent_in_gym  \n",
       "0         Other                NaN     1 or 2 days a week                 45  \n",
       "1      Engineer             8900.0                    NaN                 30  \n",
       "2        Artist             8900.0               everyday                 45  \n",
       "3        Artist             7900.0     1 or 2 days a week                 60  \n",
       "4        Artist                NaN  3 to 5 days of a week                 60  \n",
       "...         ...                ...                    ...                ...  \n",
       "1333     Doctor             7400.0  3 to 5 days of a week                 30  \n",
       "1334     Artist             8500.0               everyday                 45  \n",
       "1335   Engineer             8500.0                    NaN                 45  \n",
       "1336    Teacher            11000.0     1 or 2 days a week                 30  \n",
       "1337   Engineer             4800.0                    NaN                  0  \n",
       "\n",
       "[1338 rows x 11 columns]"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "6d8677ee-7534-401b-beb4-e1c2e5df3ad8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.0</td>\n",
       "      <td>female</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>southwest</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18.0</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>male</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.0</td>\n",
       "      <td>male</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>Artist</td>\n",
       "      <td>7900.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32.0</td>\n",
       "      <td>male</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>Artist</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    age     sex     bmi  children smoker     region      charges occupation  \\\n",
       "0  19.0  female  27.900       0.0    yes  southwest  16884.92400      Other   \n",
       "1  18.0    male     NaN       1.0     no  southeast   1725.55230   Engineer   \n",
       "2  28.0    male  33.000       3.0     no        NaN   4449.46200     Artist   \n",
       "3  33.0    male  22.705       0.0     no        NaN  21984.47061     Artist   \n",
       "4  32.0    male  28.880       0.0     no  northwest   3866.85520     Artist   \n",
       "\n",
       "   avg_steps_per_day          gym_frequency  time_spent_in_gym  \n",
       "0                NaN     1 or 2 days a week                 45  \n",
       "1             8900.0                    NaN                 30  \n",
       "2             8900.0               everyday                 45  \n",
       "3             7900.0     1 or 2 days a week                 60  \n",
       "4                NaN  3 to 5 days of a week                 60  "
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "9e580b53-0f14-4703-8089-a7543043ce1c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>50.0</td>\n",
       "      <td>male</td>\n",
       "      <td>30.97</td>\n",
       "      <td>3.0</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "      <td>10600.5483</td>\n",
       "      <td>Doctor</td>\n",
       "      <td>7400.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>18.0</td>\n",
       "      <td>female</td>\n",
       "      <td>31.92</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>northeast</td>\n",
       "      <td>2205.9808</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>NaN</td>\n",
       "      <td>female</td>\n",
       "      <td>36.85</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1629.8335</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>21.0</td>\n",
       "      <td>female</td>\n",
       "      <td>25.80</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>southwest</td>\n",
       "      <td>2007.9450</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>61.0</td>\n",
       "      <td>female</td>\n",
       "      <td>29.07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>northwest</td>\n",
       "      <td>29141.3603</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>4800.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       age     sex    bmi  children smoker     region     charges occupation  \\\n",
       "1333  50.0    male  30.97       3.0     no  northwest  10600.5483     Doctor   \n",
       "1334  18.0  female  31.92       0.0     no  northeast   2205.9808     Artist   \n",
       "1335   NaN  female  36.85       0.0     no        NaN   1629.8335   Engineer   \n",
       "1336  21.0  female  25.80       0.0     no  southwest   2007.9450    Teacher   \n",
       "1337  61.0  female  29.07       0.0    NaN  northwest  29141.3603   Engineer   \n",
       "\n",
       "      avg_steps_per_day          gym_frequency  time_spent_in_gym  \n",
       "1333             7400.0  3 to 5 days of a week                 30  \n",
       "1334             8500.0               everyday                 45  \n",
       "1335             8500.0                    NaN                 45  \n",
       "1336            11000.0     1 or 2 days a week                 30  \n",
       "1337             4800.0                    NaN                  0  "
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "bb3861f2-b415-4f34-aa29-8979354f30ed",
   "metadata": {},
   "outputs": [],
   "source": [
    "Total_Missing_Values = df.isna().sum().sum()\n",
    "Total_values = df.size\n",
    "Missing_values_percentage = (Total_Missing_Values / Total_values) * 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "2b0625c5-071b-49a1-8c47-ab70ad0c0d8f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1015"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Total_Missing_Values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "8a650602-39f1-4726-b783-03c3b4979fb0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "14718"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Total_values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "3efaf178-0f82-449e-98c3-a21140fbcdb1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6.896317434434026"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Missing_values_percentage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "8a3e6c01-dc31-434d-aa5c-9f52e6c85ca4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#question-2#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "42598133-7f97-4b97-84e5-f9c371c38a27",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>charges</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1258.000000</td>\n",
       "      <td>1220.000000</td>\n",
       "      <td>1177.000000</td>\n",
       "      <td>1338.000000</td>\n",
       "      <td>1193.000000</td>\n",
       "      <td>1338.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>37.476153</td>\n",
       "      <td>30.725066</td>\n",
       "      <td>1.123195</td>\n",
       "      <td>13270.422265</td>\n",
       "      <td>7813.914501</td>\n",
       "      <td>33.363229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>15.935575</td>\n",
       "      <td>6.099268</td>\n",
       "      <td>1.218877</td>\n",
       "      <td>12110.011237</td>\n",
       "      <td>1461.396150</td>\n",
       "      <td>21.437067</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-1.000000</td>\n",
       "      <td>15.960000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1121.873900</td>\n",
       "      <td>3000.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>25.000000</td>\n",
       "      <td>26.378750</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4740.287150</td>\n",
       "      <td>6800.000000</td>\n",
       "      <td>15.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>38.000000</td>\n",
       "      <td>30.495000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>9382.033000</td>\n",
       "      <td>7900.000000</td>\n",
       "      <td>30.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>51.000000</td>\n",
       "      <td>34.717500</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>16639.912515</td>\n",
       "      <td>9000.000000</td>\n",
       "      <td>45.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>64.000000</td>\n",
       "      <td>53.130000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>63770.428010</td>\n",
       "      <td>11700.000000</td>\n",
       "      <td>60.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               age          bmi     children       charges  avg_steps_per_day  \\\n",
       "count  1258.000000  1220.000000  1177.000000   1338.000000        1193.000000   \n",
       "mean     37.476153    30.725066     1.123195  13270.422265        7813.914501   \n",
       "std      15.935575     6.099268     1.218877  12110.011237        1461.396150   \n",
       "min      -1.000000    15.960000     0.000000   1121.873900        3000.000000   \n",
       "25%      25.000000    26.378750     0.000000   4740.287150        6800.000000   \n",
       "50%      38.000000    30.495000     1.000000   9382.033000        7900.000000   \n",
       "75%      51.000000    34.717500     2.000000  16639.912515        9000.000000   \n",
       "max      64.000000    53.130000     5.000000  63770.428010       11700.000000   \n",
       "\n",
       "       time_spent_in_gym  \n",
       "count        1338.000000  \n",
       "mean           33.363229  \n",
       "std            21.437067  \n",
       "min             0.000000  \n",
       "25%            15.000000  \n",
       "50%            30.000000  \n",
       "75%            45.000000  \n",
       "max            60.000000  "
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "884ea732-a590-49db-8f40-57833c985bda",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['age'] = df['age'].replace({-1: np.nan})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "f728107d-fdd0-4a6d-940a-cf297430c679",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>charges</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1204.000000</td>\n",
       "      <td>1220.000000</td>\n",
       "      <td>1177.000000</td>\n",
       "      <td>1338.000000</td>\n",
       "      <td>1193.000000</td>\n",
       "      <td>1338.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>39.201827</td>\n",
       "      <td>30.725066</td>\n",
       "      <td>1.123195</td>\n",
       "      <td>13270.422265</td>\n",
       "      <td>7813.914501</td>\n",
       "      <td>33.363229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>13.996733</td>\n",
       "      <td>6.099268</td>\n",
       "      <td>1.218877</td>\n",
       "      <td>12110.011237</td>\n",
       "      <td>1461.396150</td>\n",
       "      <td>21.437067</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>15.960000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1121.873900</td>\n",
       "      <td>3000.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>27.000000</td>\n",
       "      <td>26.378750</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4740.287150</td>\n",
       "      <td>6800.000000</td>\n",
       "      <td>15.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>30.495000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>9382.033000</td>\n",
       "      <td>7900.000000</td>\n",
       "      <td>30.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>51.000000</td>\n",
       "      <td>34.717500</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>16639.912515</td>\n",
       "      <td>9000.000000</td>\n",
       "      <td>45.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>64.000000</td>\n",
       "      <td>53.130000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>63770.428010</td>\n",
       "      <td>11700.000000</td>\n",
       "      <td>60.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               age          bmi     children       charges  avg_steps_per_day  \\\n",
       "count  1204.000000  1220.000000  1177.000000   1338.000000        1193.000000   \n",
       "mean     39.201827    30.725066     1.123195  13270.422265        7813.914501   \n",
       "std      13.996733     6.099268     1.218877  12110.011237        1461.396150   \n",
       "min      18.000000    15.960000     0.000000   1121.873900        3000.000000   \n",
       "25%      27.000000    26.378750     0.000000   4740.287150        6800.000000   \n",
       "50%      39.000000    30.495000     1.000000   9382.033000        7900.000000   \n",
       "75%      51.000000    34.717500     2.000000  16639.912515        9000.000000   \n",
       "max      64.000000    53.130000     5.000000  63770.428010       11700.000000   \n",
       "\n",
       "       time_spent_in_gym  \n",
       "count        1338.000000  \n",
       "mean           33.363229  \n",
       "std            21.437067  \n",
       "min             0.000000  \n",
       "25%            15.000000  \n",
       "50%            30.000000  \n",
       "75%            45.000000  \n",
       "max            60.000000  "
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "01293bcf-bc63-4cee-9827-1f791e8e87c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "#question-3#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "a4c6c542-eb07-42d2-9cd6-59465af9a3a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age                  float64\n",
       "sex                   object\n",
       "bmi                  float64\n",
       "children             float64\n",
       "smoker                object\n",
       "region                object\n",
       "charges              float64\n",
       "occupation            object\n",
       "avg_steps_per_day    float64\n",
       "gym_frequency         object\n",
       "time_spent_in_gym      int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "4b7baf14-28e4-4b6f-bf3d-f33e0e24c92f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#question-4#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "8f9e2be3-b9d3-4bf1-b2bd-2cf329a37411",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1338 entries, 0 to 1337\n",
      "Data columns (total 11 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   age                1204 non-null   float64\n",
      " 1   sex                1338 non-null   object \n",
      " 2   bmi                1220 non-null   float64\n",
      " 3   children           1177 non-null   float64\n",
      " 4   smoker             1203 non-null   object \n",
      " 5   region             1210 non-null   object \n",
      " 6   charges            1338 non-null   float64\n",
      " 7   occupation         1221 non-null   object \n",
      " 8   avg_steps_per_day  1193 non-null   float64\n",
      " 9   gym_frequency      1207 non-null   object \n",
      " 10  time_spent_in_gym  1338 non-null   int64  \n",
      "dtypes: float64(5), int64(1), object(5)\n",
      "memory usage: 115.1+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "c845a486-86a3-4b39-8ea9-396d0dbbe298",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1338 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        age    sex    bmi  children  smoker  region  charges  occupation  \\\n",
       "0     False  False  False     False   False   False    False       False   \n",
       "1     False  False   True     False   False   False    False       False   \n",
       "2     False  False  False     False   False    True    False       False   \n",
       "3     False  False  False     False   False    True    False       False   \n",
       "4     False  False  False     False   False   False    False       False   \n",
       "...     ...    ...    ...       ...     ...     ...      ...         ...   \n",
       "1333  False  False  False     False   False   False    False       False   \n",
       "1334  False  False  False     False   False   False    False       False   \n",
       "1335   True  False  False     False   False    True    False       False   \n",
       "1336  False  False  False     False   False   False    False       False   \n",
       "1337  False  False  False     False    True   False    False       False   \n",
       "\n",
       "      avg_steps_per_day  gym_frequency  time_spent_in_gym  \n",
       "0                  True          False              False  \n",
       "1                 False           True              False  \n",
       "2                 False          False              False  \n",
       "3                 False          False              False  \n",
       "4                  True          False              False  \n",
       "...                 ...            ...                ...  \n",
       "1333              False          False              False  \n",
       "1334              False          False              False  \n",
       "1335              False           True              False  \n",
       "1336              False          False              False  \n",
       "1337              False           True              False  \n",
       "\n",
       "[1338 rows x 11 columns]"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "c27e9d49-810e-4fb5-b8e5-12499b815ef0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "gym_frequency\n",
       "1 or 2 days a week       40.043011\n",
       "3 to 5 days of a week    37.988060\n",
       "everyday                 37.755556\n",
       "never                    43.485437\n",
       "Name: age, dtype: float64"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Grouping the  Data frame by 'gym_frequency' and for each group calculate Mean#\n",
    "mean_age_by_frequency = df.groupby(['gym_frequency'])['age'].mean()\n",
    "df_group = mean_age_by_frequency\n",
    "df_group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "28ef5aa6-ecdd-47b3-ad66-02227606952e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "gym_frequency\n",
       "1 or 2 days a week       40\n",
       "3 to 5 days of a week    38\n",
       "everyday                 38\n",
       "never                    43\n",
       "Name: age, dtype: int32"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "round_mean_Age = df.groupby('gym_frequency')['age'].mean().round().astype(int) \n",
    "round_mean_Age"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "19eb6af6-03be-49c8-bc03-6a24cbc2d2d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "39.20921450151057"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for index, line in df.iterrows():\n",
    "    if pd.isna(line['age']):\n",
    "        frequency = line['gym_frequency']\n",
    "        if frequency in ['1 or 2 days a week','3 to 5 days of a week','everyday','never']:\n",
    "            df.at[index, 'age'] = round_mean_Age[frequency]\n",
    "\n",
    "mean_Age= df['age'].mean()\n",
    "mean_Age"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "0a8d8720-c77b-4afa-8f65-5ec6ace582b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "39.209"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "round(mean_Age, 3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "0c86cfc5-e2d2-4462-b208-a9b9e64d5cc4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#question-5#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "b86cfaa2-1f74-4241-9cf8-5fadc3c007e0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1338 entries, 0 to 1337\n",
      "Data columns (total 11 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   age                1324 non-null   float64\n",
      " 1   sex                1338 non-null   object \n",
      " 2   bmi                1220 non-null   float64\n",
      " 3   children           1177 non-null   float64\n",
      " 4   smoker             1203 non-null   object \n",
      " 5   region             1210 non-null   object \n",
      " 6   charges            1338 non-null   float64\n",
      " 7   occupation         1221 non-null   object \n",
      " 8   avg_steps_per_day  1193 non-null   float64\n",
      " 9   gym_frequency      1207 non-null   object \n",
      " 10  time_spent_in_gym  1338 non-null   int64  \n",
      "dtypes: float64(5), int64(1), object(5)\n",
      "memory usage: 115.1+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "6a0d8396-a26a-45d4-abba-02c7752577de",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['age'] = df['age'].fillna(df['age'].median())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "167f89cc-1ca2-4f8c-9c59-63a702ec05a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "39.207"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Mean_of_Age = df['age'].mean()\n",
    "Mean_of_Age\n",
    "round(Mean_of_Age, 3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "d7e42980-6cdf-498b-80e6-16aeeadc4ae3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1338 entries, 0 to 1337\n",
      "Data columns (total 11 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   age                1338 non-null   float64\n",
      " 1   sex                1338 non-null   object \n",
      " 2   bmi                1220 non-null   float64\n",
      " 3   children           1177 non-null   float64\n",
      " 4   smoker             1203 non-null   object \n",
      " 5   region             1210 non-null   object \n",
      " 6   charges            1338 non-null   float64\n",
      " 7   occupation         1221 non-null   object \n",
      " 8   avg_steps_per_day  1193 non-null   float64\n",
      " 9   gym_frequency      1207 non-null   object \n",
      " 10  time_spent_in_gym  1338 non-null   int64  \n",
      "dtypes: float64(5), int64(1), object(5)\n",
      "memory usage: 115.1+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "1e181530-6011-450f-aa10-259806377fe9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Question-6#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "8336a3bf-e37c-42a3-aa04-2a3f6fc16a67",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "male_count = (df['sex'] == 'male').sum()\n",
    "female_count = (df['sex'] == 'female').sum()\n",
    "\n",
    "male_count > female_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "07067e62-a660-4c3a-a54b-e5650eb25452",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['sex'] = df['sex'].map({'male': 1, 'female': 0})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "4c2b6849-5956-4b33-9104-cc5868ec6619",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>southwest</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>Artist</td>\n",
       "      <td>7900.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>Artist</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.970</td>\n",
       "      <td>3.0</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "      <td>10600.54830</td>\n",
       "      <td>Doctor</td>\n",
       "      <td>7400.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>31.920</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>northeast</td>\n",
       "      <td>2205.98080</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>36.850</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1629.83350</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>25.800</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>southwest</td>\n",
       "      <td>2007.94500</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.070</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>northwest</td>\n",
       "      <td>29141.36030</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>4800.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1338 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age  sex     bmi  children smoker     region      charges occupation  \\\n",
       "0     19.0    0  27.900       0.0    yes  southwest  16884.92400      Other   \n",
       "1     18.0    1     NaN       1.0     no  southeast   1725.55230   Engineer   \n",
       "2     28.0    1  33.000       3.0     no        NaN   4449.46200     Artist   \n",
       "3     33.0    1  22.705       0.0     no        NaN  21984.47061     Artist   \n",
       "4     32.0    1  28.880       0.0     no  northwest   3866.85520     Artist   \n",
       "...    ...  ...     ...       ...    ...        ...          ...        ...   \n",
       "1333  50.0    1  30.970       3.0     no  northwest  10600.54830     Doctor   \n",
       "1334  18.0    0  31.920       0.0     no  northeast   2205.98080     Artist   \n",
       "1335  39.0    0  36.850       0.0     no        NaN   1629.83350   Engineer   \n",
       "1336  21.0    0  25.800       0.0     no  southwest   2007.94500    Teacher   \n",
       "1337  61.0    0  29.070       0.0    NaN  northwest  29141.36030   Engineer   \n",
       "\n",
       "      avg_steps_per_day          gym_frequency  time_spent_in_gym  \n",
       "0                   NaN     1 or 2 days a week                 45  \n",
       "1                8900.0                    NaN                 30  \n",
       "2                8900.0               everyday                 45  \n",
       "3                7900.0     1 or 2 days a week                 60  \n",
       "4                   NaN  3 to 5 days of a week                 60  \n",
       "...                 ...                    ...                ...  \n",
       "1333             7400.0  3 to 5 days of a week                 30  \n",
       "1334             8500.0               everyday                 45  \n",
       "1335             8500.0                    NaN                 45  \n",
       "1336            11000.0     1 or 2 days a week                 30  \n",
       "1337             4800.0                    NaN                  0  \n",
       "\n",
       "[1338 rows x 11 columns]"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "1e290926-a510-4a81-89dc-e5ff865b6fc4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#question 7#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "c94d01d7-24a7-40b4-a6b0-f8a9f2510252",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "30.495"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Bmi_Median = df['bmi'].median()\n",
    "Med= Bmi_Median\n",
    "Med"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "f6efe837-9ea4-4717-91ea-d66b4aba1d82",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\krnku\\AppData\\Local\\Temp\\ipykernel_12884\\322932457.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
      "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
      "\n",
      "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
      "\n",
      "\n",
      "  df['bmi'].fillna(Med, inplace=True)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>southwest</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.495</td>\n",
       "      <td>1.0</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>Artist</td>\n",
       "      <td>7900.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>Artist</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.970</td>\n",
       "      <td>3.0</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "      <td>10600.54830</td>\n",
       "      <td>Doctor</td>\n",
       "      <td>7400.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>31.920</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>northeast</td>\n",
       "      <td>2205.98080</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>36.850</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1629.83350</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>25.800</td>\n",
       "      <td>0.0</td>\n",
       "      <td>no</td>\n",
       "      <td>southwest</td>\n",
       "      <td>2007.94500</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.070</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>northwest</td>\n",
       "      <td>29141.36030</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>4800.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1338 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age  sex     bmi  children smoker     region      charges occupation  \\\n",
       "0     19.0    0  27.900       0.0    yes  southwest  16884.92400      Other   \n",
       "1     18.0    1  30.495       1.0     no  southeast   1725.55230   Engineer   \n",
       "2     28.0    1  33.000       3.0     no        NaN   4449.46200     Artist   \n",
       "3     33.0    1  22.705       0.0     no        NaN  21984.47061     Artist   \n",
       "4     32.0    1  28.880       0.0     no  northwest   3866.85520     Artist   \n",
       "...    ...  ...     ...       ...    ...        ...          ...        ...   \n",
       "1333  50.0    1  30.970       3.0     no  northwest  10600.54830     Doctor   \n",
       "1334  18.0    0  31.920       0.0     no  northeast   2205.98080     Artist   \n",
       "1335  39.0    0  36.850       0.0     no        NaN   1629.83350   Engineer   \n",
       "1336  21.0    0  25.800       0.0     no  southwest   2007.94500    Teacher   \n",
       "1337  61.0    0  29.070       0.0    NaN  northwest  29141.36030   Engineer   \n",
       "\n",
       "      avg_steps_per_day          gym_frequency  time_spent_in_gym  \n",
       "0                   NaN     1 or 2 days a week                 45  \n",
       "1                8900.0                    NaN                 30  \n",
       "2                8900.0               everyday                 45  \n",
       "3                7900.0     1 or 2 days a week                 60  \n",
       "4                   NaN  3 to 5 days of a week                 60  \n",
       "...                 ...                    ...                ...  \n",
       "1333             7400.0  3 to 5 days of a week                 30  \n",
       "1334             8500.0               everyday                 45  \n",
       "1335             8500.0                    NaN                 45  \n",
       "1336            11000.0     1 or 2 days a week                 30  \n",
       "1337             4800.0                    NaN                  0  \n",
       "\n",
       "[1338 rows x 11 columns]"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['bmi'].fillna(Med, inplace=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "95ddf211-1e8d-4e73-b772-506216a3eae1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       False\n",
       "1       False\n",
       "2       False\n",
       "3       False\n",
       "4       False\n",
       "        ...  \n",
       "1333    False\n",
       "1334    False\n",
       "1335    False\n",
       "1336    False\n",
       "1337    False\n",
       "Name: bmi, Length: 1338, dtype: bool"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['bmi'].isnull() #checking whether bmi values are replaced or not#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "8c636d70-381a-4a64-b799-902803681d12",
   "metadata": {},
   "outputs": [],
   "source": [
    "#question-8#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "257d8988-fc95-4fa2-81b3-011a518eacde",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1338 entries, 0 to 1337\n",
      "Data columns (total 11 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   age                1338 non-null   float64\n",
      " 1   sex                1338 non-null   int64  \n",
      " 2   bmi                1338 non-null   float64\n",
      " 3   children           1338 non-null   float64\n",
      " 4   smoker             1203 non-null   object \n",
      " 5   region             1210 non-null   object \n",
      " 6   charges            1338 non-null   float64\n",
      " 7   occupation         1221 non-null   object \n",
      " 8   avg_steps_per_day  1193 non-null   float64\n",
      " 9   gym_frequency      1207 non-null   object \n",
      " 10  time_spent_in_gym  1338 non-null   int64  \n",
      "dtypes: float64(5), int64(2), object(4)\n",
      "memory usage: 115.1+ KB\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "children\n",
       "0.0    553\n",
       "1.0    337\n",
       "2.0    241\n",
       "3.0    161\n",
       "4.0     27\n",
       "5.0     19\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_missing_val = df['children'].value_counts()\n",
    "Tot_non_missing_val = non_missing_val.sum()\n",
    "p = non_missing_val / Tot_non_missing_val\n",
    "np.random.seed(0)\n",
    "values = np.random.choice([0, 1, 2, 3, 4, 5], \n",
    "                          size=df['children'].isnull().sum(), \n",
    "                          p=[p[0], p[1], p[2], p[3], p[4], p[5]])\n",
    "df.loc[df['children'].isnull(), 'children'] = values\n",
    "df.info()\n",
    "df['children'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "1ad1b028-98c7-4383-bf3d-010dea01835e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#question-9#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "bd1d30e0-2d03-4c9a-9325-77f8230e3445",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1338 entries, 0 to 1337\n",
      "Data columns (total 11 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   age                1338 non-null   float64\n",
      " 1   sex                1338 non-null   int64  \n",
      " 2   bmi                1338 non-null   float64\n",
      " 3   children           1338 non-null   float64\n",
      " 4   smoker             1203 non-null   object \n",
      " 5   region             1210 non-null   object \n",
      " 6   charges            1338 non-null   float64\n",
      " 7   occupation         1221 non-null   object \n",
      " 8   avg_steps_per_day  1193 non-null   float64\n",
      " 9   gym_frequency      1207 non-null   object \n",
      " 10  time_spent_in_gym  1338 non-null   int64  \n",
      "dtypes: float64(5), int64(2), object(4)\n",
      "memory usage: 115.1+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "facad93c-1ef5-4827-a59a-5386e3c2c482",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "smoker\n",
       "no     963\n",
       "yes    240\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['smoker'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "d774bfda-be47-4fbb-ad6a-48bc091afa4e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1338 entries, 0 to 1337\n",
      "Data columns (total 11 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   age                1338 non-null   float64\n",
      " 1   sex                1338 non-null   int64  \n",
      " 2   bmi                1338 non-null   float64\n",
      " 3   children           1338 non-null   float64\n",
      " 4   smoker             1338 non-null   object \n",
      " 5   region             1210 non-null   object \n",
      " 6   charges            1338 non-null   float64\n",
      " 7   occupation         1221 non-null   object \n",
      " 8   avg_steps_per_day  1193 non-null   float64\n",
      " 9   gym_frequency      1207 non-null   object \n",
      " 10  time_spent_in_gym  1338 non-null   int64  \n",
      "dtypes: float64(5), int64(2), object(4)\n",
      "memory usage: 115.1+ KB\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\krnku\\AppData\\Local\\Temp\\ipykernel_12884\\2545618294.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
      "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
      "\n",
      "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
      "\n",
      "\n",
      "  df['smoker'].fillna('no', inplace = True)\n"
     ]
    }
   ],
   "source": [
    "df['smoker'].fillna('no', inplace = True)\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "c960f97a-84f0-44e9-ad0a-63117cf9e9d6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>southwest</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.495</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>southeast</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>Artist</td>\n",
       "      <td>7900.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northwest</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>Artist</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.970</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northwest</td>\n",
       "      <td>10600.54830</td>\n",
       "      <td>Doctor</td>\n",
       "      <td>7400.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>31.920</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northeast</td>\n",
       "      <td>2205.98080</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>36.850</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1629.83350</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>25.800</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>southwest</td>\n",
       "      <td>2007.94500</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.070</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northwest</td>\n",
       "      <td>29141.36030</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>4800.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1338 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age  sex     bmi  children  smoker     region      charges occupation  \\\n",
       "0     19.0    0  27.900       0.0       0  southwest  16884.92400      Other   \n",
       "1     18.0    1  30.495       1.0       1  southeast   1725.55230   Engineer   \n",
       "2     28.0    1  33.000       3.0       1        NaN   4449.46200     Artist   \n",
       "3     33.0    1  22.705       0.0       1        NaN  21984.47061     Artist   \n",
       "4     32.0    1  28.880       0.0       1  northwest   3866.85520     Artist   \n",
       "...    ...  ...     ...       ...     ...        ...          ...        ...   \n",
       "1333  50.0    1  30.970       3.0       1  northwest  10600.54830     Doctor   \n",
       "1334  18.0    0  31.920       0.0       1  northeast   2205.98080     Artist   \n",
       "1335  39.0    0  36.850       0.0       1        NaN   1629.83350   Engineer   \n",
       "1336  21.0    0  25.800       0.0       1  southwest   2007.94500    Teacher   \n",
       "1337  61.0    0  29.070       0.0       1  northwest  29141.36030   Engineer   \n",
       "\n",
       "      avg_steps_per_day          gym_frequency  time_spent_in_gym  \n",
       "0                   NaN     1 or 2 days a week                 45  \n",
       "1                8900.0                    NaN                 30  \n",
       "2                8900.0               everyday                 45  \n",
       "3                7900.0     1 or 2 days a week                 60  \n",
       "4                   NaN  3 to 5 days of a week                 60  \n",
       "...                 ...                    ...                ...  \n",
       "1333             7400.0  3 to 5 days of a week                 30  \n",
       "1334             8500.0               everyday                 45  \n",
       "1335             8500.0                    NaN                 45  \n",
       "1336            11000.0     1 or 2 days a week                 30  \n",
       "1337             4800.0                    NaN                  0  \n",
       "\n",
       "[1338 rows x 11 columns]"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['smoker'] = df['smoker'].map({'yes': 0, 'no': 1})\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "ca0dc1fb-e978-42d1-a9e5-393aca6d5eef",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Question-10#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "7c4bb45f-1bdf-4491-b488-7eec1689ce92",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>southwest</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.495</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>southeast</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>Artist</td>\n",
       "      <td>7900.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northwest</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>Artist</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.970</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northwest</td>\n",
       "      <td>10600.54830</td>\n",
       "      <td>Doctor</td>\n",
       "      <td>7400.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>31.920</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northeast</td>\n",
       "      <td>2205.98080</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>36.850</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1629.83350</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>25.800</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>southwest</td>\n",
       "      <td>2007.94500</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.070</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northwest</td>\n",
       "      <td>29141.36030</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>4800.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1338 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age  sex     bmi  children  smoker     region      charges occupation  \\\n",
       "0     19.0    0  27.900       0.0       0  southwest  16884.92400      Other   \n",
       "1     18.0    1  30.495       1.0       1  southeast   1725.55230   Engineer   \n",
       "2     28.0    1  33.000       3.0       1        NaN   4449.46200     Artist   \n",
       "3     33.0    1  22.705       0.0       1        NaN  21984.47061     Artist   \n",
       "4     32.0    1  28.880       0.0       1  northwest   3866.85520     Artist   \n",
       "...    ...  ...     ...       ...     ...        ...          ...        ...   \n",
       "1333  50.0    1  30.970       3.0       1  northwest  10600.54830     Doctor   \n",
       "1334  18.0    0  31.920       0.0       1  northeast   2205.98080     Artist   \n",
       "1335  39.0    0  36.850       0.0       1        NaN   1629.83350   Engineer   \n",
       "1336  21.0    0  25.800       0.0       1  southwest   2007.94500    Teacher   \n",
       "1337  61.0    0  29.070       0.0       1  northwest  29141.36030   Engineer   \n",
       "\n",
       "      avg_steps_per_day          gym_frequency  time_spent_in_gym  \n",
       "0                   NaN     1 or 2 days a week                 45  \n",
       "1                8900.0                    NaN                 30  \n",
       "2                8900.0               everyday                 45  \n",
       "3                7900.0     1 or 2 days a week                 60  \n",
       "4                   NaN  3 to 5 days of a week                 60  \n",
       "...                 ...                    ...                ...  \n",
       "1333             7400.0  3 to 5 days of a week                 30  \n",
       "1334             8500.0               everyday                 45  \n",
       "1335             8500.0                    NaN                 45  \n",
       "1336            11000.0     1 or 2 days a week                 30  \n",
       "1337             4800.0                    NaN                  0  \n",
       "\n",
       "[1338 rows x 11 columns]"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "8cbc6811-f718-47ea-893b-c8b2afa38f63",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1338 entries, 0 to 1337\n",
      "Data columns (total 11 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   age                1338 non-null   float64\n",
      " 1   sex                1338 non-null   int64  \n",
      " 2   bmi                1338 non-null   float64\n",
      " 3   children           1338 non-null   float64\n",
      " 4   smoker             1338 non-null   int64  \n",
      " 5   region             1338 non-null   object \n",
      " 6   charges            1338 non-null   float64\n",
      " 7   occupation         1221 non-null   object \n",
      " 8   avg_steps_per_day  1193 non-null   float64\n",
      " 9   gym_frequency      1207 non-null   object \n",
      " 10  time_spent_in_gym  1338 non-null   int64  \n",
      "dtypes: float64(5), int64(3), object(3)\n",
      "memory usage: 115.1+ KB\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "region\n",
       "southeast    365\n",
       "northwest    333\n",
       "southwest    321\n",
       "northeast    319\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_missing_region_val_counts = df['region'].value_counts()\n",
    "total_region_non_missing_val = non_missing_region_val_counts.sum()\n",
    "p = non_missing_region_val_counts / total_region_non_missing_val\n",
    "normalized_p = p/ p.sum()\n",
    "d= {0: 'southeast', 1: 'southwest', 2: 'northwest', 3: 'northeast'}\n",
    "np.random.seed(0)\n",
    "values = np.random.choice([0, 1, 2, 3], \n",
    "                           size=df['region'].isnull().sum(), \n",
    "                           p= normalized_p)\n",
    "for index, value in df['region'].items():\n",
    "    if pd.isnull(value):\n",
    "        df.at[index, 'region'] = d[values[0]]\n",
    "        values = values[1:]\n",
    "df.info()\n",
    "df['region'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "2fa0ffad-3d59-4dfd-b820-845b19a86595",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>southwest</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.495</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>southeast</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northwest</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northwest</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>Artist</td>\n",
       "      <td>7900.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northwest</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>Artist</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.970</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northwest</td>\n",
       "      <td>10600.54830</td>\n",
       "      <td>Doctor</td>\n",
       "      <td>7400.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>31.920</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northeast</td>\n",
       "      <td>2205.98080</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>36.850</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>southwest</td>\n",
       "      <td>1629.83350</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>25.800</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>southwest</td>\n",
       "      <td>2007.94500</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.070</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>northwest</td>\n",
       "      <td>29141.36030</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>4800.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1338 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age  sex     bmi  children  smoker     region      charges occupation  \\\n",
       "0     19.0    0  27.900       0.0       0  southwest  16884.92400      Other   \n",
       "1     18.0    1  30.495       1.0       1  southeast   1725.55230   Engineer   \n",
       "2     28.0    1  33.000       3.0       1  northwest   4449.46200     Artist   \n",
       "3     33.0    1  22.705       0.0       1  northwest  21984.47061     Artist   \n",
       "4     32.0    1  28.880       0.0       1  northwest   3866.85520     Artist   \n",
       "...    ...  ...     ...       ...     ...        ...          ...        ...   \n",
       "1333  50.0    1  30.970       3.0       1  northwest  10600.54830     Doctor   \n",
       "1334  18.0    0  31.920       0.0       1  northeast   2205.98080     Artist   \n",
       "1335  39.0    0  36.850       0.0       1  southwest   1629.83350   Engineer   \n",
       "1336  21.0    0  25.800       0.0       1  southwest   2007.94500    Teacher   \n",
       "1337  61.0    0  29.070       0.0       1  northwest  29141.36030   Engineer   \n",
       "\n",
       "      avg_steps_per_day          gym_frequency  time_spent_in_gym  \n",
       "0                   NaN     1 or 2 days a week                 45  \n",
       "1                8900.0                    NaN                 30  \n",
       "2                8900.0               everyday                 45  \n",
       "3                7900.0     1 or 2 days a week                 60  \n",
       "4                   NaN  3 to 5 days of a week                 60  \n",
       "...                 ...                    ...                ...  \n",
       "1333             7400.0  3 to 5 days of a week                 30  \n",
       "1334             8500.0               everyday                 45  \n",
       "1335             8500.0                    NaN                 45  \n",
       "1336            11000.0     1 or 2 days a week                 30  \n",
       "1337             4800.0                    NaN                  0  \n",
       "\n",
       "[1338 rows x 11 columns]"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "2f378495-0061-4ece-90f0-2b95599bc132",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Question-11"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "4a72f959-8356-45ea-a76b-8f5c48ba5e1c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "      <th>region_northeast</th>\n",
       "      <th>region_northwest</th>\n",
       "      <th>region_southeast</th>\n",
       "      <th>region_southwest</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.495</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>Artist</td>\n",
       "      <td>7900.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>60</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>Artist</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>60</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.970</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>10600.54830</td>\n",
       "      <td>Doctor</td>\n",
       "      <td>7400.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>31.920</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2205.98080</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>36.850</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1629.83350</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>25.800</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2007.94500</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.070</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>29141.36030</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>4800.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1338 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age  sex     bmi  children  smoker      charges occupation  \\\n",
       "0     19.0    0  27.900       0.0       0  16884.92400      Other   \n",
       "1     18.0    1  30.495       1.0       1   1725.55230   Engineer   \n",
       "2     28.0    1  33.000       3.0       1   4449.46200     Artist   \n",
       "3     33.0    1  22.705       0.0       1  21984.47061     Artist   \n",
       "4     32.0    1  28.880       0.0       1   3866.85520     Artist   \n",
       "...    ...  ...     ...       ...     ...          ...        ...   \n",
       "1333  50.0    1  30.970       3.0       1  10600.54830     Doctor   \n",
       "1334  18.0    0  31.920       0.0       1   2205.98080     Artist   \n",
       "1335  39.0    0  36.850       0.0       1   1629.83350   Engineer   \n",
       "1336  21.0    0  25.800       0.0       1   2007.94500    Teacher   \n",
       "1337  61.0    0  29.070       0.0       1  29141.36030   Engineer   \n",
       "\n",
       "      avg_steps_per_day          gym_frequency  time_spent_in_gym  \\\n",
       "0                   NaN     1 or 2 days a week                 45   \n",
       "1                8900.0                    NaN                 30   \n",
       "2                8900.0               everyday                 45   \n",
       "3                7900.0     1 or 2 days a week                 60   \n",
       "4                   NaN  3 to 5 days of a week                 60   \n",
       "...                 ...                    ...                ...   \n",
       "1333             7400.0  3 to 5 days of a week                 30   \n",
       "1334             8500.0               everyday                 45   \n",
       "1335             8500.0                    NaN                 45   \n",
       "1336            11000.0     1 or 2 days a week                 30   \n",
       "1337             4800.0                    NaN                  0   \n",
       "\n",
       "      region_northeast  region_northwest  region_southeast  region_southwest  \n",
       "0                False             False             False              True  \n",
       "1                False             False              True             False  \n",
       "2                False              True             False             False  \n",
       "3                False              True             False             False  \n",
       "4                False              True             False             False  \n",
       "...                ...               ...               ...               ...  \n",
       "1333             False              True             False             False  \n",
       "1334              True             False             False             False  \n",
       "1335             False             False             False              True  \n",
       "1336             False             False             False              True  \n",
       "1337             False              True             False             False  \n",
       "\n",
       "[1338 rows x 14 columns]"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# pd.get_dummies() to create one-hot encoded columns for the 'region' column\n",
    "df = pd.get_dummies(df, columns=['region'])\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "fc1ebe5f-0291-47c8-986d-db09baf9bf23",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Question-12#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "e461c5c3-1551-491d-83b1-d22ecea6098a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\krnku\\AppData\\Local\\Temp\\ipykernel_12884\\1679960358.py:3: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
      "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
      "\n",
      "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
      "\n",
      "\n",
      "  df['occupation'].fillna('Other', inplace=True)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "      <th>region_northeast</th>\n",
       "      <th>region_northwest</th>\n",
       "      <th>region_southeast</th>\n",
       "      <th>region_southwest</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.495</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>Artist</td>\n",
       "      <td>7900.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>60</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>Artist</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>60</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.970</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>10600.54830</td>\n",
       "      <td>Doctor</td>\n",
       "      <td>7400.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>31.920</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2205.98080</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>36.850</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1629.83350</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>25.800</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2007.94500</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.070</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>29141.36030</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>4800.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1338 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age  sex     bmi  children  smoker      charges occupation  \\\n",
       "0     19.0    0  27.900       0.0       0  16884.92400      Other   \n",
       "1     18.0    1  30.495       1.0       1   1725.55230   Engineer   \n",
       "2     28.0    1  33.000       3.0       1   4449.46200     Artist   \n",
       "3     33.0    1  22.705       0.0       1  21984.47061     Artist   \n",
       "4     32.0    1  28.880       0.0       1   3866.85520     Artist   \n",
       "...    ...  ...     ...       ...     ...          ...        ...   \n",
       "1333  50.0    1  30.970       3.0       1  10600.54830     Doctor   \n",
       "1334  18.0    0  31.920       0.0       1   2205.98080     Artist   \n",
       "1335  39.0    0  36.850       0.0       1   1629.83350   Engineer   \n",
       "1336  21.0    0  25.800       0.0       1   2007.94500    Teacher   \n",
       "1337  61.0    0  29.070       0.0       1  29141.36030   Engineer   \n",
       "\n",
       "      avg_steps_per_day          gym_frequency  time_spent_in_gym  \\\n",
       "0                   NaN     1 or 2 days a week                 45   \n",
       "1                8900.0                    NaN                 30   \n",
       "2                8900.0               everyday                 45   \n",
       "3                7900.0     1 or 2 days a week                 60   \n",
       "4                   NaN  3 to 5 days of a week                 60   \n",
       "...                 ...                    ...                ...   \n",
       "1333             7400.0  3 to 5 days of a week                 30   \n",
       "1334             8500.0               everyday                 45   \n",
       "1335             8500.0                    NaN                 45   \n",
       "1336            11000.0     1 or 2 days a week                 30   \n",
       "1337             4800.0                    NaN                  0   \n",
       "\n",
       "      region_northeast  region_northwest  region_southeast  region_southwest  \n",
       "0                False             False             False              True  \n",
       "1                False             False              True             False  \n",
       "2                False              True             False             False  \n",
       "3                False              True             False             False  \n",
       "4                False              True             False             False  \n",
       "...                ...               ...               ...               ...  \n",
       "1333             False              True             False             False  \n",
       "1334              True             False             False             False  \n",
       "1335             False             False             False              True  \n",
       "1336             False             False             False              True  \n",
       "1337             False              True             False             False  \n",
       "\n",
       "[1338 rows x 14 columns]"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_of_missing = df['occupation'].isnull().sum()\n",
    "frequency_other_before_imputation = (df['occupation'] == 'Other').sum()\n",
    "df['occupation'].fillna('Other', inplace=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "61316937-0d53-42ed-875e-4b0890a09042",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "117"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_of_missing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "5e247abe-fc3f-4399-86cd-2e935ef321d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "242"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "frequency_other_before_imputation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "05cf527a-de7e-4e7b-bfb7-012b3f1e4c3b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "359"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "frequency_other_after_imputation = num_of_missing + frequency_other_before_imputation\n",
    "frequency_other_after_imputation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "ba7eb76f-d1e0-4f1e-ae88-4d69ce70e822",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "      <th>region_northeast</th>\n",
       "      <th>region_northwest</th>\n",
       "      <th>region_southeast</th>\n",
       "      <th>region_southwest</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.495</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>Artist</td>\n",
       "      <td>7900.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>60</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>Artist</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>60</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.970</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>10600.54830</td>\n",
       "      <td>Doctor</td>\n",
       "      <td>7400.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>31.920</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2205.98080</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>36.850</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1629.83350</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>25.800</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2007.94500</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.070</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>29141.36030</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>4800.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1338 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age  sex     bmi  children  smoker      charges occupation  \\\n",
       "0     19.0    0  27.900       0.0       0  16884.92400      Other   \n",
       "1     18.0    1  30.495       1.0       1   1725.55230   Engineer   \n",
       "2     28.0    1  33.000       3.0       1   4449.46200     Artist   \n",
       "3     33.0    1  22.705       0.0       1  21984.47061     Artist   \n",
       "4     32.0    1  28.880       0.0       1   3866.85520     Artist   \n",
       "...    ...  ...     ...       ...     ...          ...        ...   \n",
       "1333  50.0    1  30.970       3.0       1  10600.54830     Doctor   \n",
       "1334  18.0    0  31.920       0.0       1   2205.98080     Artist   \n",
       "1335  39.0    0  36.850       0.0       1   1629.83350   Engineer   \n",
       "1336  21.0    0  25.800       0.0       1   2007.94500    Teacher   \n",
       "1337  61.0    0  29.070       0.0       1  29141.36030   Engineer   \n",
       "\n",
       "      avg_steps_per_day          gym_frequency  time_spent_in_gym  \\\n",
       "0                   NaN     1 or 2 days a week                 45   \n",
       "1                8900.0                    NaN                 30   \n",
       "2                8900.0               everyday                 45   \n",
       "3                7900.0     1 or 2 days a week                 60   \n",
       "4                   NaN  3 to 5 days of a week                 60   \n",
       "...                 ...                    ...                ...   \n",
       "1333             7400.0  3 to 5 days of a week                 30   \n",
       "1334             8500.0               everyday                 45   \n",
       "1335             8500.0                    NaN                 45   \n",
       "1336            11000.0     1 or 2 days a week                 30   \n",
       "1337             4800.0                    NaN                  0   \n",
       "\n",
       "      region_northeast  region_northwest  region_southeast  region_southwest  \n",
       "0                False             False             False              True  \n",
       "1                False             False              True             False  \n",
       "2                False              True             False             False  \n",
       "3                False              True             False             False  \n",
       "4                False              True             False             False  \n",
       "...                ...               ...               ...               ...  \n",
       "1333             False              True             False             False  \n",
       "1334              True             False             False             False  \n",
       "1335             False             False             False              True  \n",
       "1336             False             False             False              True  \n",
       "1337             False              True             False             False  \n",
       "\n",
       "[1338 rows x 14 columns]"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Question-13#\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "5fae0bd4-1582-41a3-ab1f-5330a2691f39",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "occupation             Artist  Doctor  Engineer  Other  Teacher\n",
      "gym_frequency                                                  \n",
      "1 or 2 days a week         44      44        34     55       31\n",
      "3 to 5 days of a week      61      61        77     93       77\n",
      "everyday                   84      69        75    113       61\n",
      "never                      38      44        46     61       39\n"
     ]
    }
   ],
   "source": [
    "Cross_Tab = pd.crosstab(df['gym_frequency'], df['occupation'])\n",
    "print(Cross_Tab)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "6d648607-865b-46e6-9145-185306251772",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Artist': 'everyday', 'Doctor': 'everyday', 'Engineer': '3 to 5 days of a week', 'Other': 'everyday', 'Teacher': '3 to 5 days of a week'}\n"
     ]
    }
   ],
   "source": [
    "grouped = df.groupby('occupation')['gym_frequency'] \n",
    "most_freq_gym_frequency = {} # Creates a Dictionary to store most frequent Gym frequency#\n",
    "for occupation, row in grouped:\n",
    "    # Find the most frequent gym frequency in the group, .iloc[0]: Selects the first mode from the resulting pandas Series, in case there are multiple modes.#\n",
    "    Frequency_Most_Frequent = row.mode().iloc[0] \n",
    "    most_freq_gym_frequency[occupation] = Frequency_Most_Frequent\n",
    "\n",
    "print(most_freq_gym_frequency)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "325959e3-b946-45bf-bd2c-49d429dd506c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "      <th>region_northeast</th>\n",
       "      <th>region_northwest</th>\n",
       "      <th>region_southeast</th>\n",
       "      <th>region_southwest</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.495</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>Artist</td>\n",
       "      <td>7900.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>60</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>Artist</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>60</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.970</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>10600.54830</td>\n",
       "      <td>Doctor</td>\n",
       "      <td>7400.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>31.920</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2205.98080</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>everyday</td>\n",
       "      <td>45</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>36.850</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1629.83350</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>25.800</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2007.94500</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>1 or 2 days a week</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.070</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>29141.36030</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>4800.0</td>\n",
       "      <td>3 to 5 days of a week</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1338 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age  sex     bmi  children  smoker      charges occupation  \\\n",
       "0     19.0    0  27.900       0.0       0  16884.92400      Other   \n",
       "1     18.0    1  30.495       1.0       1   1725.55230   Engineer   \n",
       "2     28.0    1  33.000       3.0       1   4449.46200     Artist   \n",
       "3     33.0    1  22.705       0.0       1  21984.47061     Artist   \n",
       "4     32.0    1  28.880       0.0       1   3866.85520     Artist   \n",
       "...    ...  ...     ...       ...     ...          ...        ...   \n",
       "1333  50.0    1  30.970       3.0       1  10600.54830     Doctor   \n",
       "1334  18.0    0  31.920       0.0       1   2205.98080     Artist   \n",
       "1335  39.0    0  36.850       0.0       1   1629.83350   Engineer   \n",
       "1336  21.0    0  25.800       0.0       1   2007.94500    Teacher   \n",
       "1337  61.0    0  29.070       0.0       1  29141.36030   Engineer   \n",
       "\n",
       "      avg_steps_per_day          gym_frequency  time_spent_in_gym  \\\n",
       "0                   NaN     1 or 2 days a week                 45   \n",
       "1                8900.0  3 to 5 days of a week                 30   \n",
       "2                8900.0               everyday                 45   \n",
       "3                7900.0     1 or 2 days a week                 60   \n",
       "4                   NaN  3 to 5 days of a week                 60   \n",
       "...                 ...                    ...                ...   \n",
       "1333             7400.0  3 to 5 days of a week                 30   \n",
       "1334             8500.0               everyday                 45   \n",
       "1335             8500.0  3 to 5 days of a week                 45   \n",
       "1336            11000.0     1 or 2 days a week                 30   \n",
       "1337             4800.0  3 to 5 days of a week                  0   \n",
       "\n",
       "      region_northeast  region_northwest  region_southeast  region_southwest  \n",
       "0                False             False             False              True  \n",
       "1                False             False              True             False  \n",
       "2                False              True             False             False  \n",
       "3                False              True             False             False  \n",
       "4                False              True             False             False  \n",
       "...                ...               ...               ...               ...  \n",
       "1333             False              True             False             False  \n",
       "1334              True             False             False             False  \n",
       "1335             False             False             False              True  \n",
       "1336             False             False             False              True  \n",
       "1337             False              True             False             False  \n",
       "\n",
       "[1338 rows x 14 columns]"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Using for loop & Fill missing gym_frequency values with the most frequent gym frequency for each occupation\n",
    "for occupation, frequency in most_freq_gym_frequency.items():\n",
    "    df.loc[df['occupation'] == occupation, 'gym_frequency'] = df.loc[df['occupation'] == occupation, 'gym_frequency'].fillna(frequency)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "7c4ba9da-1785-411a-89a8-5b2fe8165d10",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "gym_frequency\n",
       "everyday                 486\n",
       "3 to 5 days of a week    416\n",
       "never                    228\n",
       "1 or 2 days a week       208\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['gym_frequency'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "60f259b4-6f3d-4149-b793-958e449e33c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Question-14#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "26d73276-ca93-4c0b-a1dc-a849a6bce9ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>charges</th>\n",
       "      <th>occupation</th>\n",
       "      <th>avg_steps_per_day</th>\n",
       "      <th>gym_frequency</th>\n",
       "      <th>time_spent_in_gym</th>\n",
       "      <th>region_northeast</th>\n",
       "      <th>region_northwest</th>\n",
       "      <th>region_southeast</th>\n",
       "      <th>region_southwest</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.495</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8900.0</td>\n",
       "      <td>3</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.0</td>\n",
       "      <td>1</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>Artist</td>\n",
       "      <td>7900.0</td>\n",
       "      <td>1</td>\n",
       "      <td>60</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32.0</td>\n",
       "      <td>1</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>Artist</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>60</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>50.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30.970</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>10600.54830</td>\n",
       "      <td>Doctor</td>\n",
       "      <td>7400.0</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>31.920</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2205.98080</td>\n",
       "      <td>Artist</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>3</td>\n",
       "      <td>45</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>36.850</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1629.83350</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>8500.0</td>\n",
       "      <td>2</td>\n",
       "      <td>45</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>25.800</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2007.94500</td>\n",
       "      <td>Teacher</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.070</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>29141.36030</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>4800.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1338 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age  sex     bmi  children  smoker      charges occupation  \\\n",
       "0     19.0    0  27.900       0.0       0  16884.92400      Other   \n",
       "1     18.0    1  30.495       1.0       1   1725.55230   Engineer   \n",
       "2     28.0    1  33.000       3.0       1   4449.46200     Artist   \n",
       "3     33.0    1  22.705       0.0       1  21984.47061     Artist   \n",
       "4     32.0    1  28.880       0.0       1   3866.85520     Artist   \n",
       "...    ...  ...     ...       ...     ...          ...        ...   \n",
       "1333  50.0    1  30.970       3.0       1  10600.54830     Doctor   \n",
       "1334  18.0    0  31.920       0.0       1   2205.98080     Artist   \n",
       "1335  39.0    0  36.850       0.0       1   1629.83350   Engineer   \n",
       "1336  21.0    0  25.800       0.0       1   2007.94500    Teacher   \n",
       "1337  61.0    0  29.070       0.0       1  29141.36030   Engineer   \n",
       "\n",
       "      avg_steps_per_day  gym_frequency  time_spent_in_gym  region_northeast  \\\n",
       "0                   NaN              1                 45             False   \n",
       "1                8900.0              2                 30             False   \n",
       "2                8900.0              3                 45             False   \n",
       "3                7900.0              1                 60             False   \n",
       "4                   NaN              2                 60             False   \n",
       "...                 ...            ...                ...               ...   \n",
       "1333             7400.0              2                 30             False   \n",
       "1334             8500.0              3                 45              True   \n",
       "1335             8500.0              2                 45             False   \n",
       "1336            11000.0              1                 30             False   \n",
       "1337             4800.0              2                  0             False   \n",
       "\n",
       "      region_northwest  region_southeast  region_southwest  \n",
       "0                False             False              True  \n",
       "1                False              True             False  \n",
       "2                 True             False             False  \n",
       "3                 True             False             False  \n",
       "4                 True             False             False  \n",
       "...                ...               ...               ...  \n",
       "1333              True             False             False  \n",
       "1334             False             False             False  \n",
       "1335             False             False              True  \n",
       "1336             False             False              True  \n",
       "1337              True             False             False  \n",
       "\n",
       "[1338 rows x 14 columns]"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['gym_frequency'] = df['gym_frequency'].map({'never': 0, '1 or 2 days a week': 1, '3 to 5 days of a week':2, 'everyday': 3})\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "4726013c-4a57-472c-9459-5bcb7ac9f274",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Question-15#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "85ab6cc8-5ee9-4575-bbda-595fbd202fef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1338 entries, 0 to 1337\n",
      "Data columns (total 18 columns):\n",
      " #   Column               Non-Null Count  Dtype  \n",
      "---  ------               --------------  -----  \n",
      " 0   age                  1338 non-null   float64\n",
      " 1   sex                  1338 non-null   int64  \n",
      " 2   bmi                  1338 non-null   float64\n",
      " 3   children             1338 non-null   float64\n",
      " 4   smoker               1338 non-null   int64  \n",
      " 5   charges              1338 non-null   float64\n",
      " 6   avg_steps_per_day    1193 non-null   float64\n",
      " 7   gym_frequency        1338 non-null   int64  \n",
      " 8   time_spent_in_gym    1338 non-null   int64  \n",
      " 9   region_northeast     1338 non-null   bool   \n",
      " 10  region_northwest     1338 non-null   bool   \n",
      " 11  region_southeast     1338 non-null   bool   \n",
      " 12  region_southwest     1338 non-null   bool   \n",
      " 13  occupation_Artist    1338 non-null   bool   \n",
      " 14  occupation_Doctor    1338 non-null   bool   \n",
      " 15  occupation_Engineer  1338 non-null   bool   \n",
      " 16  occupation_Other     1338 non-null   bool   \n",
      " 17  occupation_Teacher   1338 non-null   bool   \n",
      "dtypes: bool(9), float64(5), int64(4)\n",
      "memory usage: 106.0 KB\n"
     ]
    }
   ],
   "source": [
    "df = pd.get_dummies(df, columns=['occupation'])\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "762b7bcf-2987-488e-9979-6720199f70f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Question-16#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "0d515d4a-2f18-40ec-8c66-4e3ceb52b2da",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7843.35"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = df['age'] // 10 * 10\n",
    "Median_Steps_foreach_Age_group = df.groupby(X)['avg_steps_per_day'].median() # for each age group Calculates Median 'avg_steps_per_day' #\n",
    "\n",
    "# Using for loop & iterate over each age group by filling the Missing Values with corresponding median values#\n",
    "for age_group, Med in Median_Steps_foreach_Age_group.items():\n",
    "    Ag_gp = (X == age_group)\n",
    "    df.loc[Ag_gp, 'avg_steps_per_day'] = df.loc[Ag_gp, 'avg_steps_per_day'].fillna(Med)\n",
    "\n",
    "Average_Steps_per_Day = df['avg_steps_per_day'].mean()\n",
    "Average_Steps_per_Day\n",
    "round(Average_Steps_per_Day,2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "1327da4c-e80a-4c44-831f-49b623e56827",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Question-17#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "89a6f534-6da8-435e-a0bd-1dd6bef147d7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1338 entries, 0 to 1337\n",
      "Data columns (total 18 columns):\n",
      " #   Column               Non-Null Count  Dtype  \n",
      "---  ------               --------------  -----  \n",
      " 0   age                  1338 non-null   float64\n",
      " 1   sex                  1338 non-null   int64  \n",
      " 2   bmi                  1338 non-null   float64\n",
      " 3   children             1338 non-null   float64\n",
      " 4   smoker               1338 non-null   int64  \n",
      " 5   charges              1338 non-null   float64\n",
      " 6   avg_steps_per_day    1338 non-null   float64\n",
      " 7   gym_frequency        1338 non-null   int64  \n",
      " 8   time_spent_in_gym    1338 non-null   int64  \n",
      " 9   region_northeast     1338 non-null   bool   \n",
      " 10  region_northwest     1338 non-null   bool   \n",
      " 11  region_southeast     1338 non-null   bool   \n",
      " 12  region_southwest     1338 non-null   bool   \n",
      " 13  occupation_Artist    1338 non-null   bool   \n",
      " 14  occupation_Doctor    1338 non-null   bool   \n",
      " 15  occupation_Engineer  1338 non-null   bool   \n",
      " 16  occupation_Other     1338 non-null   bool   \n",
      " 17  occupation_Teacher   1338 non-null   bool   \n",
      "dtypes: bool(9), float64(5), int64(4)\n",
      "memory usage: 106.0 KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "6c4c9b16-0c5e-4d95-8634-6c08edd8bf34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "18"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "number_of_columns = df.shape[1]\n",
    "number_of_columns"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
